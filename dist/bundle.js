(()=>{var e={697:e=>{e.exports=function(e,t){e.sort(((e,t)=>e-t));const n={};n.classInterval=function(e,t){const n=Math.max(...e)-Math.min(...e),a=Math.ceil(n/t),r=[],o=Math.min(...e)+(a*t-1);for(let t=Math.min(...e);t<=o;t+=a)r.push({min:t,max:t+(a-1)});return r}(e,t),n.classBoundaries=n.classInterval.map((e=>({min:e.min-.5,max:e.max+.5}))),n.classMark=n.classInterval.map((e=>(e.min+e.max)/2)),n.classFrequency=[];for(let a=0;a<t;a+=1){n.classFrequency.push(0);for(let t=0;t<e.length;t+=1)e[t]>=n.classInterval[a].min&&e[t]<=n.classInterval[a].max&&(n.classFrequency[a]+=1)}return n.relativeFrequency=n.classFrequency.map((t=>Number((t/e.length).toFixed(3)))),n}},720:e=>{function t(e,t){return Number(e.toFixed(t))}function n(e){return t(e.reduce(((e,t)=>e+t),0)/e.length,3)}function a(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"population";const r=n(e),o=e.map((e=>(e-r)**2)),i="population"===a?e.length:e.length-1;return t(o.reduce(((e,t)=>e+t),0)/i,3)}e.exports={limitDecimalPoints:t,getMean:n,getMode:function(e){const t={};e.forEach((e=>{t[e]=(t[e]||0)+1}));let n=0,a=[];return a=Object.keys(t).reduce(((e,r)=>{const o=Number(r),i=t[r];return i>n?(a=[o],n=i):i===n&&a.push(o),a}),[]),a.length===Object.keys(t).length?[]:a},getMedian:function(e){const t=e.slice().sort(((e,t)=>e-t)),n=Math.floor(t.length/2);return t.length%2==0?(t[n-1]+t[n])/2:t[n]},getVariance:a,getStandardDeviation:function(e){const n=a(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"population");return t(Math.sqrt(n),3)}}},818:(e,t,n)=>{const{limitDecimalPoints:a}=n(720);function r(e){return e<0?"indirect":e>0?"direct":""}function o(e){const t=Math.abs(e);return t>0&&t<=.25?"weak":t>.25&&t<=.75?"intermediate":t>.75&&t<1?"strong":""}e.exports={calculateSimpleCorrelation:function(e,t){const n=e.reduce(((e,t)=>e+t),0),r=t.reduce(((e,t)=>e+t),0),o=[],i=[],s=[];for(let n=0;n<e.length;n+=1)o[n]=e[n]*t[n],i[n]=e[n]**2,s[n]=t[n]**2;const c=o.reduce(((e,t)=>e+t),0),l=i.reduce(((e,t)=>e+t),0),d=s.reduce(((e,t)=>e+t),0),u=e.length,m=n**2/u,p=r**2/u,h=Math.sqrt((l-m)*(d-p));return a((c-n*r/u)/h,3)},getNature:r,getStrength:o,getFinalLabel:function(e){return 0===e?"no relation":1===e||-1===e?"perfect correlation":`${r(e)} ${o(e)} correlation`}}},329:(e,t,n)=>{const{limitDecimalPoints:a,getMean:r,getMedian:o,getStandardDeviation:i}=n(720);e.exports={calculateSkewness:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"population";const n=3*(r(e)-o(e))/i(e,t);return a(n,3)},getSymmetry:function(e){return e>0?"positively skewed":e<0?"negatively skewed":"normally skewed"}}}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var a={};(()=>{"use strict";n.d(a,{b:()=>M});var e=n(697),t=n.n(e);const r=document.querySelector("main"),o=document.createElement("div");function i(e){const{key:t}=e;return t>="0"&&t<="9"||(e.preventDefault(),!1)}function s(e){const{key:t}=e;return t>="0"&&t<="9"||","===t||"."===t||(e.preventDefault(),!1)}o.id="frq-dist-u-table";var c=n(329);const l=document.querySelector("main"),d=document.createElement("div");function u(e){const{key:t}=e;return t>="0"&&t<="9"||","===t||"."===t||(e.preventDefault(),!1)}d.id="skewness-result-container";var m=n(818);const p=document.querySelector("main"),h=document.createElement("div");function f(e){const{key:t}=e;return t>="0"&&t<="9"||","===t||"."===t||(e.preventDefault(),!1)}h.id="simple-corre-table";const v=document.querySelector("nav #nav-button"),y=document.querySelector("aside");function b(e){y.contains(e.target)||v.contains(e.target)||y.classList.contains("hidden")||(y.classList.add("hidden"),window.removeEventListener("click",b))}v.onclick=()=>{y.classList.toggle("hidden"),window.addEventListener("click",b)};const g=document.querySelector("main").innerHTML,x=document.querySelector("header img"),E=document.querySelector("main"),C=document.querySelectorAll("aside button");function M(e){if(e){let t=e.firstChild;for(;t;)t.remove(),t=e.firstChild}}x.onclick=()=>{M(E),E.innerHTML=g},C.forEach((e=>{e.addEventListener("click",(()=>{M(E)}))})),C[0].addEventListener("click",(function(){const e=document.createElement("h2");e.textContent="# Frequency Distribution Table (Ungrouped)";const n=document.createElement("div");n.innerHTML="<p>Important characteristics of a large mass of data can be readily assessed by <b>grouping the data into different classes</b> and then determining the number of observations that fall in each of the classes.</p>",n.innerHTML+="<p>Such an arrangement in tabular form is called a frequency distribution</p>";const a=document.createElement("form");a.id="frq-dist-u-form",function(e){const n=document.createElement("label");n.textContent="Data Set (e.g. 1,2,3):";const a=document.createElement("input");a.type="text",a.name="dataset",a.placeholder="1,2,3",n.appendChild(a),a.addEventListener("keypress",s);const r=document.createElement("label");r.textContent="Number of Classes:";const c=document.createElement("input");c.type="text",c.name="numClasses",c.placeholder="1 - 999",c.maxLength="3",r.appendChild(c),r.appendChild(c),c.addEventListener("keypress",i),a.setAttribute("required",!0),c.setAttribute("required",!0);const l=document.createElement("button");l.textContent="Show Frequency Distribution",l.type="submit";const d=document.createElement("p");d.textContent="All* fields are required",d.style.display="none",d.style.color="red",d.style.textAlign="center",l.addEventListener("click",(e=>{e.preventDefault(),M(o),a.value&&c.value?(function(e,n){const a=t()(e,n),r=document.createElement("p");r.textContent="Data Set (Sorted): ",r.id="data-set-display";const i=e.sort();for(let t=0;t<i.length;t+=1)"Data Set (Sorted): "===r.textContent?r.textContent+=e[t]:r.textContent+=`, ${e[t]}`;const s=document.createElement("table"),c=s.insertRow();["Class Interval","Class Boundaries","Class Mark","Class Frequency","Relative Frequency"].forEach((e=>{const t=document.createElement("th");t.textContent=e,c.appendChild(t)}));for(let e=0;e<n;e+=1){const t=s.insertRow(),n=t.insertCell(),r=a.classInterval[e];n.textContent=`${r.min} - ${r.max}`;const o=t.insertCell(),i=a.classBoundaries[e];o.textContent=`${i.min} - ${i.max}`,["classMark","classFrequency","relativeFrequency"].forEach((n=>{t.insertCell().textContent=a[n][e]}))}o.append(s,r)}(a.value.split(",").filter((e=>""!==e.trim())).map(Number),Number(c.value)),d.style.display="none",c.value="",a.value=""):d.style.display="block"})),e.append(n,r,l,d)}(a);const c=document.createElement("div");c.innerHTML="<h3>✏️ How It Works</h3>",c.innerHTML+="<p>From the data entered, the calculator computes for the <b>class width</b> (range / class number) rounded <i>up</i> to the nearest whole number. <i>(<b>range</b> = min - max)</i></p>",c.innerHTML+="Using the computed class width, the calculator now computes for the <b>class intervals</b> of the data. Starting with the lowest value in the data set which will be used as base for the lower class interval, the calculator will add a value of (class width - 1) to get the higher class interval. The value of class width will be added to the following class intervals.",c.innerHTML+="<p><code><pre>\n  const maxClassInterval = Math.min(...dataSet) + ((classWidth * classNumber) - 1);\n  for (let i = Math.min(...dataSet); i <= maxClassInterval; i += classWidth) {\n    classInterval.push({ min: i, max: i + (classWidth - 1) });\n  }\n  </pre></code></p>",c.innerHTML+="The calculator proceeds to computing the <b>class boundaries</b> by subtracting 0.5 to the lower value of class intervals and adding 0.5 to the higher value of class intervals.",c.innerHTML+="<p><code><pre>\n  classBoundaries = classInterval.map((classInt) => ({\n    min: classInt.min - 0.5,\n    max: classInt.max + 0.5,\n  }));\n  </pre></code></p>",c.innerHTML+="<b>Class mark</b> is computed by adding the lower and higher value of the corresponding interval and dividing them to 2",c.innerHTML+="<p><code><pre>\n  classMark = fTable.classInterval.map((classInt) => (classInt.min + classInt.max) / 2);\n  </pre></code></p>",c.innerHTML+="The calculator computes the <b>frequency</b> of values within each class interval by tallying the number of data points that fall into each interval.",c.innerHTML+="<p><code><pre>\n  classFrequency = [];\n  for (let i = 0; i < classNumber; i += 1) {\n    classFrequency.push(0);\n    for (let j = 0; j < dataSet.length; j += 1) {\n      if (dataSet[j] >= classInterval[i].min && dataSet[j] <= classInterval[i].max) {\n        classFrequency[i] += 1;\n      }\n    }\n  }\n  </pre></code></p>",c.innerHTML+="The <b>relative frequency</b> for each class interval is calculated by dividing the corresponding class frequency by the total number of data points in the dataset, resulting in a proportional value for each interval. <i>The resulting value that has any fractional part of the number will have a maximum of three decimal places.</i>",c.innerHTML+="<p><code><pre>\n  fTable.relativeFrequency = fTable.classFrequency.map((frequency) => (\n    Number((frequency / dataSet.length).toFixed(3))\n  ));\n  </pre></code></p>",r.append(e,n,a,o,c)})),C[1].addEventListener("click",(function(){const e=document.createElement("h2");e.textContent="# Symmetry and Skewness";const t=document.createElement("div");t.innerHTML="<p><b>Symmetric: </b>if distribution can be folded along a vertical axis so that the two sides coincide.</p>",t.innerHTML+="<p><b>Skewed: </b>a distribution that lacks symmetry with respect to vertical axis.</p>";const n=document.createElement("form");n.id="skewness-form",function(e){const t=document.createElement("label");t.textContent="Data Set (e.g. 1,2,3):";const n=document.createElement("input");n.type="text",n.name="dataset",n.placeholder="1,2,3",t.appendChild(n),n.addEventListener("keypress",u);const a=document.createElement("label"),r=document.createElement("input");r.type="checkbox",r.name="population",r.checked=!0,a.appendChild(r),a.appendChild(document.createTextNode(" Population"));const o=document.createElement("label"),i=document.createElement("input");i.type="checkbox",i.name="sample",o.appendChild(i),o.appendChild(document.createTextNode(" Sample"));const s=[r,i];s.forEach((e=>{e.addEventListener("change",(e=>{s.forEach((t=>{t.checked||t===e.target?t!==e.target&&(t.checked=!1):t.checked=!0}))}))}));const l=document.createElement("button");l.textContent="Show Symmetry and Skewness",l.type="submit";const m=document.createElement("p");m.textContent="All* fields are required",m.style.display="none",m.style.color="red",m.style.textAlign="center",l.addEventListener("click",(e=>{if(e.preventDefault(),M(d),n.value){m.style.display="none";const e=r.checked?"population":"sample";!function(e,t){const n=e.value.split(",").filter((e=>""!==e.trim())).map(Number),a=(0,c.calculateSkewness)(n,t),r=(0,c.getSymmetry)(a),o=document.createElement("p");o.textContent="Data Set (Sorted): ",o.id="data-set-display";const i=n.sort();for(let e=0;e<i.length;e+=1)"Data Set (Sorted): "===o.textContent?o.textContent+=n[e]:o.textContent+=`, ${n[e]}`;const s=document.createElement("p");s.textContent=`Result: ${a}, ${r}`,d.append(s,o)}(n,e),n.value=""}else m.style.display="block"})),e.append(t,a,o,l,m)}(n);const a=document.createElement("div");a.innerHTML="<h3>✏️ How It Works</h3>",a.innerHTML+="<p>The skewness of a dataset is calculated using the following formula:</p>",a.innerHTML+="<p>Skewness = 3(Mean−Median) / Standard Deviation</p>",a.innerHTML+="<p>Where:</p>",a.innerHTML+="<p>- Mean is the mean (average) of the dataset.</p>",a.innerHTML+="<p>- Median is the median of the dataset.</p>",a.innerHTML+="<p>- Standard Deviation is the standard deviation of the dataset.</p>",a.innerHTML+="<p>Expressed in javascript:</p>",a.innerHTML+="<p><code><pre>\n  function calculateSkewness(data, type = 'population') {\n    const skewness = (3 * (getMean(data) - getMedian(data))) / getStandardDeviation(data, type);\n    return skewness;\n  }\n  </pre></code></p>",a.innerHTML+="<p>The formula essentially measures the asymmetry of the dataset. If the skewness is:</p>",a.innerHTML+="<p>- Positive: The data distribution is skewed to the right (positively skewe</p>",a.innerHTML+="<p>- Negative: The data distribution is skewed to the left (negatively skewed).</p>",a.innerHTML+="<p>- The data distribution is symmetric (normally skewed).</p>",a.innerHTML+="<p>Expressed in javascript:</p>",a.innerHTML+="<p><code><pre>\n  function getSymmetry(skewness) {\n    if (skewness > 0) return 'positively skewed';\n    if (skewness < 0) return 'negatively skewed';\n    return 'normally skewed'; // === 0\n  }\n  </pre></code></p>",l.append(e,t,n,d,a)})),C[2].addEventListener("click",(function(){const e=document.createElement("h2");e.textContent="# Simple Correlation Coefficient";const t=document.createElement("div");t.innerHTML="<p>It is also called as <b>Pearson's correlation</b> or <b>Product moment correlation coefficient</b></p>",t.innerHTML+="<p>It measures the nature and strength between two variables of the quantitative type</p>";const n=document.createElement("form");n.id="simple-corre-form",function(e){const t=document.createElement("label");t.textContent="X Data Set (e.g. 1,2,3):";const n=document.createElement("input");n.type="text",n.name="dataset",n.placeholder="1,2,3",t.appendChild(n),n.addEventListener("keypress",f);const a=document.createElement("label");a.textContent="Y Data Set (e.g. 1,2,3):";const r=document.createElement("input");r.type="text",r.name="dataset",r.placeholder="1,2,3",a.appendChild(r),r.addEventListener("keypress",f);const o=document.createElement("label");o.textContent="X Label:",o.className="data-label";const i=document.createElement("input");i.type="text",i.name="x-label",i.value="X",o.appendChild(i);const s=document.createElement("label");s.textContent="Y Label:",s.className="data-label";const c=document.createElement("input");c.type="text",c.name="y-label",c.value="Y",s.appendChild(c),n.setAttribute("required",!0),r.setAttribute("required",!0);const l=document.createElement("button");l.textContent="Show Simple Correlation Coefficient",l.type="submit";const d=document.createElement("p");d.textContent="All* fields are required",d.style.display="none",d.style.color="red",d.style.textAlign="center",l.addEventListener("click",(e=>{e.preventDefault(),M(h),n.value&&r.value?(function(e,t,n){const a=(0,m.calculateSimpleCorrelation)(e,t),r=(0,m.getFinalLabel)(a),o=document.createElement("p");o.textContent=`Result: ${a}, ${r}`;const i=document.createElement("table"),s=i.insertRow();n.forEach((e=>{const t=document.createElement("th");t.textContent=e,s.appendChild(t)}));for(let n=0;n<e.length;n+=1){const a=i.insertRow();a.insertCell().textContent=e[n],a.insertCell().textContent=t[n]}h.append(o,i)}(n.value.split(",").filter((e=>""!==e.trim())).map(Number),r.value.split(",").filter((e=>""!==e.trim())).map(Number),[i.value,c.value]),d.style.display="none",n.value="",r.value="",i.value="X",c.value="Y"):d.style.display="block"})),e.append(o,t,s,a,l,d)}(n);const a=document.createElement("div");a.innerHTML="<h3>✏️ How It Works</h3>",a.innerHTML+="<p>To interpret the correlation coefficient:</p>",a.innerHTML+="The calculator uses a labeling function that categorizes the coefficient based on its value. A coefficient of 0 is labeled 'no relation,' while a coefficient of 1 or -1 indicates a 'perfect correlation.' For other coefficients, the label reflects both the nature (positive or negative) and strength (weak, moderate, strong) of the correlation.",a.innerHTML+="<p>Expressed in javascript:</p>",a.innerHTML+="<p><code><pre>\n  function getFinalLabel(value) {\n    if (value === 0) return 'no relation';\n    if (value === 1 || value === -1) return 'perfect correlation';\n    return 'getNature(value) getStrength(value) correlation';\n  }\n  </pre></code></p>",a.innerHTML+="<p>To calculate the correlation coefficient:</p>",a.innerHTML+="The correlation calculation involves various steps, including obtaining sums, products, and squared values of data points from two datasets. The size of the datasets (n) is considered. Applying the Pearson correlation formula, which involves covariance and standard deviations, yields the correlation coefficient. The final result is limited to three decimal points.",a.innerHTML+="<p>Expressed in javascript:</p>",a.innerHTML+="<p><code><pre>\n  function calculateSimpleCorrelation(xData, yData) {\n    const summationX = xData.reduce((acc, val) => acc + val, 0);\n    const summationY = yData.reduce((acc, val) => acc + val, 0);\n  \n    const xyData = []; const xSquaredData = []; const\n      ySquaredData = [];\n    for (let i = 0; i < xData.length; i += 1) {\n      xyData[i] = xData[i] * yData[i];\n      xSquaredData[i] = xData[i] ** 2;\n      ySquaredData[i] = yData[i] ** 2;\n    }\n  \n    const summationXY = xyData.reduce((acc, val) => acc + val, 0);\n    const summationXSquared = xSquaredData.reduce((acc, val) => acc + val, 0);\n    const summationYSquared = ySquaredData.reduce((acc, val) => acc + val, 0);\n    const n = xData.length;\n  \n    const xSquaredDividedByN = summationX ** 2 / n;\n    const ySquaredDividedByN = summationY ** 2 / n;\n  \n    const denominator = Math.sqrt(\n      (summationXSquared - xSquaredDividedByN) * (summationYSquared - ySquaredDividedByN),\n    );\n    const numerator = summationXY - ((summationX * summationY) / n);\n    const simpleCorrelation = numerator / denominator;\n    return limitDecimalPoints(simpleCorrelation, 3);\n  }\n  </pre></code></p>",p.append(e,t,n,h,a)}))})()})();